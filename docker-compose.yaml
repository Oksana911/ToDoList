version: '3.8'

services:

  frontend:
    image: sermalenk/skypro-front:lesson-37
    ports:
      - 80:80
    depends_on:
      - api
    restart: always

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    env_file:
      - .env
    volumes:
      - ./.env:/code/.env
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  migrations:
    build:
      context: .
    volumes:
      - ./.env:/code/.env
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py migrate

  db:
    image: postgres:12.4-alpine
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
